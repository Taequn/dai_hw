\documentclass{article}
\usepackage{amsmath} %This allows me to use the align functionality.
                     %If you find yourself trying to replicate
                     %something you found online, ensure you're
                     %loading the necessary packages!
\usepackage{amsfonts}%Math font
\usepackage{graphicx}%For including graphics
\usepackage{hyperref}%For Hyperlinks
\hypersetup{colorlinks = true,citecolor=black}
\usepackage{natbib}        %For the bibliography
\bibliographystyle{apalike}%For the bibliography
\usepackage[margin=0.75in]{geometry}
\usepackage{float}
\begin{document}
\noindent \textbf{MA 354: Data Analysis I -- Fall 2021}\\%\\ gives you a new line
\noindent \textbf{Homework 4:}\vspace{1em}\\
\emph{Complete the following opportunities to use what we've talked about in class. 
These questions will be graded for correctness, communication and succinctness. 
Ensure you show your work and explain your logic in a legible and refined submission.}
%Comments -- anything after % is not put into the PDF
\begin{enumerate}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%  Question 0
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\item[0.] \textbf{Complete weekly diagnostics.}
  
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%  Question 1
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\item On its website, Ozempic, a medication for lowering the risk of major cardiovascular 
events (e.g., heart attack, stroke, etc.), states that 
\begin{itemize}
  \item 66\% of people taking 0.5 mg Ozempic
  \item 73\% of people taking 1 mg Ozempic
  \item 40\% of people taking 100 mg Januvia
\end{itemize}
reached an A1C under 7\%, noting higher A1C is indicative of higher risk of heart disease.

\begin{enumerate}
\item Explain why this statement alone isn't enough to conclude whether there is a statistically 
significant difference among the treatments.

<<>>=
"To assess any significant difference we need ot run a t-sample proportion test, but since we only have the information on the proportion of the people seeing beneficial affect in the above question, it is not sufficient information"
@
\item The statement on Ozempic's website comes from a phase 3a randomized double-blind study. 
\cite{Ahren17} reports that 409 received Ozempic (0.5 mg), 409 received Ozempic (1 mg), and 407 
received Januvia (100 mg). 
\begin{enumerate}
  \item Determine whether there is sufficient evidence of a difference in rates of attaining an 
  A1C under 7\% across treatments.
  
<<>>=
#https://pubmed.ncbi.nlm.nih.gov/28385659/
#Mean baseline HbA1c was 8Â·1%
#2)

### Remember to write about the assumptions of doing t-sample prop.test#####
# Successful and total cases for 0.5 mg Ozempic
x1 = round(0.66*409)
n1 = 409

# Successful and total cases for 1 mg Ozempic
x2 = round(0.73*409)
n2 = 409

# Successful and total cases for 100 mg Januvia
x3 = round(0.4*407)
n3 = 407

prop.test(x = c(x1, x2, x3), n = c(n1, n2, n3))

# There is a significant p-value to support a difference ()


#t sample proportion test
#DO IT

@
  \item Perform a follow-up analysis for comparing treatments. If you were at high risk for 
  cardiovascular events, which medication would you want to take.
<<>>=
pairwise.prop.test(x = c(x1, x2, x3), n = c(n1, n2, n3))

# There is a significant difference between 2 and 3 and 1 and 3 success proportions. So
# 1 and 2 are better than 3. But if we have alpha = 0.05 then there is also a significant 
# difference between 1 and 2, in which case 2 (1 mg of Ozempic) is better.
@


\end{enumerate}
\end{enumerate}
\newpage
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%  Question 2
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\item Is the ANOVA really robust to Normality? Equal sample size? Equal variance?
To assess this we'll check the ability of ANOVA to detect differences in a 
sample and retain the $\alpha=0.05$ across different settings. This homework 
question was motivated by \cite{Blanca17} who published a simulation study 
about ANOVA.\\

\textbf{Remark:} My professor in graduate school always told me that I didn't
have to memorize any results, I could just derive them. The data analysis
analog to this is that if we have any questions about how a model works
under a given condition (or broken assumption) we can just simulate it!
\begin{enumerate}
  \item Plot the Laplace distribution with $m=0$ and $s=2$; the PDF
  of this distribution is cataloged in \texttt{R} as \texttt{dlaplace()} 
  in the rmutil package, which you'll need to install and load. Superimpose
  the graph of the Gaussian distribution with $\mu=0$ and $\sigma=2$. Comment
  on the differences you see and what you think might happen if the data 
  are Laplace distributed instead of the Gaussian distribution.
  \item Conduct a simulation study using the Laplace distribution. To do so, 
  complete the following 1000 times and report the proportion of times the
  data lead to a rejection of the null hypothesis.\\
<<>>=
library(rmutil)
library(tidyverse)

ggdat <- data.frame(x=seq(-5, 5, length.out=5000))%>%
  mutate(f=dlaplace(x, m=0, s=2),
         f1=dnorm(x, mean=0, sd=2))

#set the legend
ggplot(ggdat, aes(x=x, y=f))+
  geom_line(color="blue")+
  geom_line(aes(y=f1), color="red")
@
  
  The most efficient way to complete this question (including the other parts)
  is to write a function that completes the following. 
  \begin{itemize}
    \item \textbf{Input:} 
    \begin{itemize}
      \item \texttt{rand.n=FALSE} -- a logical object denoting whether the sample
                                     size is random or not. False by default.
                                     See part (f).
      \item \texttt{rand.s=FALSE} -- a logical object denoting whether the dispersion
                                     equal or not not. False by default. See part (g).
      \item \texttt{equal.m=TRUE} -- a logical object denoting whether the location
                                     parameters should be equal (part b) or different 
                                     (part c). TRUE by default. 
      \item \texttt{n=5} -- the desired sample size if not random. Five by default.
    \end{itemize}
    \item \textbf{Loop the following tasks 1000 times:}
    \begin{itemize}
      \item Generate $t=4$ samples of size $n$ drawn independently from the 
        laplace distribution with $m$ and $s$ which can be done using 
        \texttt{rlaplace()} function from the rmutil package \citep{rmutil}. Specify
        $n$, $m$, and $s$ based on the values of the
        logical variables described above.
      \item Perform the ANOVA procedure on these generated data.
      \item Store whether the test resulted in a rejected null hypothesis or not.
    \end{itemize}
    \item \textbf{Return:}
    \begin{itemize}
      \item Your function should return the proportion of the 1000 ANOVA tests
      that resulted in a rejected null hypothesis.
    \end{itemize}
  \end{itemize}
    Comment on the results of this simulation completed in the default case where
  $m_1=m_2=m_3=m_4=0$, $s_1=s_2=s_3=s_4=2$, and $n_1=n_2=n_3=n_4=5$
  
<<warning=FALSE>>=
library(rstatix)
aovFunc <- function(rand.n=FALSE, rand.s=FALSE, equal.m=TRUE, n=5, loop=0,
                    welch=FALSE){
  alpha<-0.05
  count=0
  if(rand.n){
    n1=round(runif(1, min=5, max=100),0)
    n2=round(runif(1, min=5, max=100),0)
    n3=round(runif(1, min=5, max=100),0)
    n4=round(runif(1, min=5, max=100),0)
  }
  else{
    n1=n
    n2=n
    n3=n
    n4=n
  }
  
  if(rand.s){
    #DOUBLE CHECK WITH PROFESSOR
    s1=rgamma(1, 2, 1)
    s2=rgamma(1, 2, 1)
    s3=rgamma(1, 2, 1)
    s4=rgamma(1, 2, 1)
  }else{
    s1=1
    s2=1
    s3=1
    s4=1
  }
  for(i in 1:loop){
    if(equal.m){
      t1<-rlaplace(n=n1, m=0, s=s1)
      label1<-"T1"
      
      t2<-rlaplace(n=n2, m=0, s=s2)
      label2<-"T2"
      
      t3<-rlaplace(n=n3, m=0, s=s3)
      label3<-"T3"
      
      t4<-rlaplace(n=n4, m=0, s=s4)
      label4<-"T4"
    }
    
    else{
      t1<-rlaplace(n=n1, m=0, s=s1)
      label1<-"T1"
      
      t2<-rlaplace(n=n2, m=0, s=s2)
      label2<-"T2"
      
      t3<-rlaplace(n=n3, m=0, s=s3)
      label3<-"T3"
      
      t4<-rlaplace(n=n4, m=1, s=s4)
      label4<-"T4"
    }
    
    dat<-data.frame(value=c(t1, t2, t3, t4), 
                    group=c(rep(c("T1", "T2", "T3", "T4"), 
                                                         times=c(length(t1), 
                                                                 length(t2), 
                                                                 length(t3), 
                                                                 length(t4)))))
    
    if(!welch){
      anova<-summary(aov(value~group, data=dat))
      sum_test <- unlist((anova))
      p.value<-sum_test["Pr(>F)1"]
      #print(p.value) #bugtest
    }else{
      anova_w<-welch_anova_test(value~group, data=dat)
      p.value<-anova_w$p
    }
    
    if(p.value<0.05){
     count=count+1
    }
  }
  count/loop
}
aovFunc(loop=100)
@

  \item Repeat the simulation study in (b-d), except with different means; i.e.,
  $m_1=m_2=m_3=0$, and $m_4=1$. Comment on the results of this simulation.

<<warning=FALSE>>=
aovFunc(equal.m=FALSE, loop=100)
@
\item Repeat the simulation study in (b-c), except with $n=15$. Comment on the results of this simulation.
<<warning=FALSE>>=
aovFunc(equal.m=TRUE, loop=100, n=15)
aovFunc(equal.m=FALSE, loop=100, n=15)
@
  \item Repeat the simulation study in (b-c), except with $n=50$.
  Comment on the results of this simulation.
<<warning=FALSE>>=
aovFunc(equal.m=TRUE, loop=100, n=50)
aovFunc(equal.m=FALSE, loop=100, n=50)
@
\item Repeat (b-e), except randomly select the sample size for each 
group by selecting $n$ from the uniform(5,100) distribution. This 
will help us assess the robustness of the equal sample size assumption
in the Laplace population distribution case. Comment on the results of 
this simulation.
<<>>=
aovFunc(equal.m=TRUE, rand.n=TRUE, loop=100)
aovFunc(equal.m=FALSE, rand.n=TRUE, loop=100)
@
\item Repeat (b-f), except randomly select the dispersion for each 
  group by selecting $s$ from the gamma(2,1) distribution. This 
  will help us assess the robustness of the equal variance assumption
  in the Laplace population distribution case. Comment on the results of 
  this simulation.
  <<>>=
aovFunc(equal.m=TRUE, rand.n=TRUE, rand.s=TRUE, loop=100)
aovFunc(equal.m=FALSE, rand.n=TRUE, rand.s=TRUE, loop=100)
@
\item Write a loop that conducts this simulation when (1) $s$ is fixed and (2) 
when $s$ is random, for the case where the means are unequal. The loop should be 
with respect to $n$, and should run for $n=5$ to $n=200$.\\

<<>>=
# results<-c()
# n<-10:50
# y1<-c()
# y2<-c()
# y3<-c()
# 
# for(i in 10:50){
#   print(i)
#   unequal<-aovFunc(equal.m=FALSE, rand.s=TRUE, loop=100, n=i)
#   y1<-c(y1, unequal)
#   equal<-aovFunc(equal.m=FALSE, rand.s=FALSE, loop=100, n=i)
#   y2<-c(y2, equal)
#   
#   wUnequal<-aovFunc(equal.m=FALSE, rand.s=TRUE, loop=100, n=i, welch=T)
#   y3<-c(y3, wUnequal)
# }
# 
# ggdat<-data.frame(x=n, equal.s=y2, unequal.s=y1,
#                   welch=y3)
# ggplot(ggdat, aes(x=x))+
#   geom_line(aes(y=equal.s), color="red")+
#   geom_line(aes(y=unequal.s), color="blue")+
#   geom_line(aes(y=welch), color="black")+
#   labs(title="Everybody hates Welch")

@
\textbf{Note:} This can take some computation time, you'll want to run it and save 
the image as a .pdf so you can load it instead of rerunning the code.
\end{enumerate}
\newpage
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%  Question 3
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  \item Complete the following parts. This will lead you through the simulation
  of data, fitting regression lines and evaluating the assumptions.
  \begin{enumerate}
  \item Fit a model to the following simulated data. Make observations about
  the model equation and the Pearson correlation.
<<>>=
n=500
x<-sample(x = seq(0,5,0.01), size=n, replace=T)
y<-5*x + 3

ggdat<-data.frame(x=x, y=y)
ggplot(ggdat, aes(x=x, y=y))+
  geom_smooth(color="blue",
              method="lm",
              formula=y~x)+
  geom_point(shape=1,
             alpha=.3)
  theme_bw()
  #put pearson on the plot
@
  \item Fit a model to the following simulated data, now with added Normal error. Make
  observations about the model equation and the Pearson correlation in relation to (a).
<<>>=
e<-rnorm(n=n,mean=0,sd=3)
y2<-5*x + 3 + e

ggdat<-data.frame(x=x, y=y2)
ggplot(ggdat, aes(x=x, y=y))+
  geom_smooth(color="blue",
              method="lm",
              formula=y~x)+
  geom_point(shape=1,
             alpha=.3)+
  theme_bw()
  #put pearson on the plot
cor(x, y2, method="pearson")

@
  \item In the model of part (b), evaluate the normality and homogeneity of error terms. Note 
  that we know both of these items to be true since we've taken $\epsilon \sim 
  \textrm{N}(\mu=0,\sigma=3)$.
<<>>=
#not stealing your function, prof. c:
plotResiduals<-function(mod){
  ggdat <- data.frame(y.hat = fitted(mod),
                      e = residuals(mod))
  
  ########################################
  ####  Fitted versus residuals
  ########################################
  p1<-ggplot(data=ggdat,aes(x=y.hat,y=e))+
    geom_point(shape=1)+
    geom_hline(yintercept=0,linetype="dashed")+
    theme_bw()+
    xlab(bquote(hat(Y)))+
    ylab("Residuals")+
    ggtitle("Fitted Values versus the Residuals")
  
  ########################################
  ####  Histogram with Gaussian Density
  ########################################
  ggdat.gaussian<-data.frame(x=seq(min(ggdat$e)-sd(ggdat$e),
                                   max(ggdat$e)+sd(ggdat$e),length.out = 500),
                             f=dnorm(seq(min(ggdat$e)-sd(ggdat$e),
                                     max(ggdat$e)+sd(ggdat$e),length.out = 500),
                                     #ei should have mean zero
                                     mean=0,
                                     #ei should have common variance  
                                     sd=summary(mod)$sigma),
                             CDF=pnorm(seq(min(ggdat$e)-sd(ggdat$e),
                                         max(ggdat$e)+sd(ggdat$e),length.out = 500),
                                     #ei should have mean zero
                                     mean=0,
                                     #ei should have common variance  
                                     sd=summary(mod)$sigma))
  
  d<-density(ggdat$e)
  p2<-ggplot(data=ggdat,aes(x=e))+
    geom_histogram(aes(y=..density..), binwidth = d$bw,
                   fill="lightblue",color="black")+
    geom_density(aes(color="Empirical"),size=1,
                 trim=F,show.legend = F)+
    geom_line(data=ggdat.gaussian,aes(x=x,y=f,color="Gaussian-Assumed"),
              size=1)+
    theme_bw()+
    xlab("Residual")+
    ylab("Density")+
    labs(color = "")+
    theme(legend.position="bottom")+
    ggtitle("Residual Density")
  
  ########################################
  ####  Plot the residuals ecdf
  ########################################
  e.cdf.func<-ecdf(ggdat$e)
  e.cdf<-e.cdf.func(sort(ggdat$e))
  
  ggdat<-ggdat %>% mutate(e.sort=sort(ggdat$e),
                   e.cdf=e.cdf)

  p3<-ggplot(data=ggdat,aes(x=e.sort))+
    geom_line(data=ggdat.gaussian,aes(x=x,y=CDF,color="Gaussian-Assumed"),size=1)+
    geom_step(aes(y=e.cdf,color="Empirical"),show.legend = F,size=1)+
    geom_hline(yintercept=0)+
    theme_bw()+
    xlab("Residual")+
    ylab("Cumulative Density")+
    labs(color = "")+
    theme(legend.position="bottom")+
    ggtitle("Residual Cumulative Density")
  
  ########################################
  ####  QQplot of the residuals
  ########################################
  library("qqplotr")
  p4<-ggplot(data=ggdat,aes(sample=scale(e)))+ #standardize e
    stat_qq_band(alpha=0.25) +
    stat_qq_line() +
    stat_qq_point() +
    theme_bw()+
    xlab("Gaussian Quantiles")+
    ylab("Sample Quantiles")+
    ggtitle("Normal Quantile-Quantile Plot of Residuals")
  
  
  ########################################
  ####  Print
  ########################################
  (p1|p4)/(p2|p3)
}
@

  <<>>=
library(patchwork)
model1 <- lm(y2~x)
plotResiduals(model1)
#Variance is the same
#https://uc-r.github.io/assumptions_homogeneity#visualization
@
\item Fit a model to the following simulated data, now with added exponential error.
  Make observations about the model equation and the Pearson correlation in relation 
  to the model of part (b).
<<>>=
e<-rexp(n=n,rate = 1/2)
y3<-5*x + 3 + e

ggdat<-data.frame(x=x, y=y3)
ggplot(ggdat, aes(x=x, y=y))+
  geom_smooth(color="blue",
              method="lm",
              formula=y~x)+
  geom_point(shape=1,
             alpha=.3)+
  theme_bw()
  #put pearson on the plot
cor(x, y3, method="pearson")
@

  \item In the model of part (d), evaluate the normality and homogeneity of error 
  terms. Note that we know that common variance is true but we've taken $\epsilon \sim 
  \textrm{exp}(\beta=2)$.
  <<>>=
model2 <- lm(y3~x)
plotResiduals(model2)
#It's a skewed normal dist, but it's not homogeneous.
@
\item Fit a model to the following simulated data, now with added Heteroskedastic
normal error. Make observations about the model equation and the Pearson correlation
in relation to the model of part (b).
<<>>=
x4<-x[order(x)] 
e<-rnorm(n=n,mean=0,sd=c(rep(1,n/2),rep(3,n/2))) 
y4<-5*x4 + 3 + e

ggdat<-data.frame(x=x4, y=y4)
ggplot(ggdat, aes(x=x, y=y))+
  geom_smooth(color="blue",
              method="lm",
              formula=y~x)+
  geom_point(shape=1,
             alpha=.3)+
  theme_bw()
@
  \item In the model of part (f), evaluate the normality and homogeneity of error terms. Note
  that we know that normality of error terms is true, but $\epsilon \sim 
  \textrm{N}(\mu=0,\sigma=1)$ for $x<\widehat{m}$ and $\epsilon \sim 
  \textrm{N}(\mu=0,\sigma=3)$ for $x>\widehat{m}$.
  <<>>=
model3 <- lm(y4~x4)
plotResiduals(model3)
@
\end{enumerate}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%  Question 4
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\item Consider the following simulation.
  \begin{enumerate}
    \item Plot the data simulated below. Assess the linear relationship.
<<warning=FALSE,message=FALSE>>=

library(tidyverse)
set.seed(7272)
n<-50
ggdat <- data.frame(x=sample(x=seq(0,100,0.01),size=n,replace=TRUE)) %>%
  mutate(y=3.5+2.1*x+rnorm(n=n,mean=0,sd=5))
@
    \item Write out the population model.
<<>>=
#Y=B{0}+B{1}{x} + error
@
    \item Fit the model based on the sample data and write out the sample model below.
<<>>=
#hat(Y)=hat(B{0})+hat(B){1}{x}
four.model<-lm(y~x, data=ggdat)
summary(four.model)

#hat(B){0}=5.22
#hat(B){1}{x}=2.06

#hat(Y)=-5.22+2.06x

#Prediction = 5.22+2.06(x) + (random error)
@
    \item Add the regression line to the plot in black.
<<>>=
ggplot(ggdat, aes(x=x, y=y))+
  geom_smooth(color="black",
              method="lm",
              formula=y~x)+
  geom_point(shape=1,
             alpha=.3)+
  theme_bw()
@
    \item Interpret the $R^2$ of the model.
    <<>>=
#Adjusted R-squared:  0.9937 
#99% of the variance can be explained by the model we built.

@
    \item Interpret the overall $F$ test of the model.
    <<>>=
#Look at p-value
@
    \item Interpret the coefficients of the model; are they what you would expect?
    <<>>=
#Yeah, that's easy.
@
    \item Now, let's add a bad datapoint to the data.
<<>>=
ggdat <- rbind(ggdat,     # original data
               c(100,25)) # bad observation
@
  \begin{enumerate}
    \item Briefly summarize how adding this data point affects parts (a)-(g).
    <<>>=
ggplot(ggdat, aes(x=x, y=y))+
  geom_smooth(color="blue",
              method="lm",
              formula=y~x)+
  geom_point(shape=1,
             alpha=.3)+
  theme_bw()
#there is one unusually small observation!
four.model<-lm(y~x, data=ggdat)
four.model.r <- rlm(y~x, data=ggdat)
plotResiduals(four.model)
summary(four.model.r)
@
    \item Add the resulting regression line to the plot in part (d) in blue.
    <<>>=
#5.2+(2.06*x)
#10.742+(1.891*x)

ggdat.final <- ggdat %>%
  mutate(beforeAdding = 5.2+(2.06*x),
         afterAdding = 10.742+(1.891*x))%>%
  pivot_longer(cols=ends_with("Adding"),
               names_to="Plot",
               values_to="Pred")


ggplot(ggdat.final, aes(x=x, y=Pred))+
  geom_smooth(aes(color=Plot),
              method="lm",
              formula=y~x)+
  geom_point(aes(y=y), shape=1,
             alpha=.3)

@
    \item Refit this model using several robust techniques for dealing with the
    bad observation. Create a plot that summarizes all the approaches taken, and 
    use a metric to select the best model.
    <<>>=


@
  \end{enumerate}
  \end{enumerate}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% End File
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\end{enumerate}
\newpage
\bibliography{bib}
\end{document}